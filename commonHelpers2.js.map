{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector(\"button[data-start]\");\nconst daysField = document.querySelector(\"span[data-days]\");\nconst hoursField= document.querySelector(\"span[data-hours]\");\nconst minutesField = document.querySelector(\"span[data-minutes]\");\nconst secondsField = document.querySelector(\"span[data-seconds]\");\n\nstartBtn.disabled = true;\nlet countdounTime = 0;\nstartBtn.addEventListener(\"click\", handlerStartBtnCick)\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    checkDate(selectedDates[0].getTime(), this.now.getTime());\n  },\n};\nflatpickr(\"#datetime-picker\", options);\n\nfunction checkDate(selectedDate, now){\n  if (selectedDate > now) {\n    startBtn.disabled = false;\n    countdounTime = selectedDate - now;\n    showTime(countdounTime);\n  } else {\n    startBtn.disabled = true;\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please choose a date in the future',\n      position: 'topRight'\n    });\n  }\n}\n\nfunction showTime(ms){\n  const time = convertMs(ms);\n  daysField.textContent = addLeadingZero(time.days.toString());\n  hoursField.textContent = addLeadingZero(time.hours.toString());\n  minutesField.textContent = addLeadingZero(time.minutes.toString());\n  secondsField.textContent = addLeadingZero(time.seconds.toString());\n}\nfunction addLeadingZero(value) {\n  return value.padStart(2, '0');\n}\n\nfunction handlerStartBtnCick() {\n  const countInterval = setInterval(() => {\n    if (countdounTime < 1000) {\n      clearInterval(countInterval);\n      return;\n    }\n    countdounTime -= 1000;\n    showTime(countdounTime);\n  }, 1000)\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}"],"names":["startBtn","daysField","hoursField","minutesField","secondsField","countdounTime","handlerStartBtnCick","options","selectedDates","checkDate","flatpickr","selectedDate","now","showTime","iziToast","ms","time","convertMs","addLeadingZero","value","countInterval","days","hours","minutes","seconds"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAY,SAAS,cAAc,iBAAiB,EACpDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAe,SAAS,cAAc,oBAAoB,EAC1DC,EAAe,SAAS,cAAc,oBAAoB,EAEhEJ,EAAS,SAAW,GACpB,IAAIK,EAAgB,EACpBL,EAAS,iBAAiB,QAASM,CAAmB,EAEtD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EAC5BC,EAAUD,EAAc,GAAG,QAAS,EAAE,KAAK,IAAI,QAAO,CAAE,CACzD,CACH,EACAE,EAAU,mBAAoBH,CAAO,EAErC,SAASE,EAAUE,EAAcC,EAAI,CAC/BD,EAAeC,GACjBZ,EAAS,SAAW,GACpBK,EAAgBM,EAAeC,EAC/BC,EAASR,CAAa,IAEtBL,EAAS,SAAW,GACpBc,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,UAChB,CAAK,EAEL,CAEA,SAASD,EAASE,EAAG,CACnB,MAAMC,EAAOC,EAAUF,CAAE,EACzBd,EAAU,YAAciB,EAAeF,EAAK,KAAK,SAAQ,CAAE,EAC3Dd,EAAW,YAAcgB,EAAeF,EAAK,MAAM,SAAQ,CAAE,EAC7Db,EAAa,YAAce,EAAeF,EAAK,QAAQ,SAAQ,CAAE,EACjEZ,EAAa,YAAcc,EAAeF,EAAK,QAAQ,SAAQ,CAAE,CACnE,CACA,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAS,EAAG,GAAG,CAC9B,CAEA,SAASb,GAAsB,CAC7B,MAAMc,EAAgB,YAAY,IAAM,CACtC,GAAIf,EAAgB,IAAM,CACxB,cAAce,CAAa,EAC3B,MACD,CACDf,GAAiB,IACjBQ,EAASR,CAAa,CACvB,EAAE,GAAI,CACT,CAEA,SAASY,EAAUF,EAAI,CAQrB,MAAMM,EAAO,KAAK,MAAMN,EAAK,KAAG,EAE1BO,EAAQ,KAAK,MAAOP,EAAK,MAAO,IAAI,EAEpCQ,EAAU,KAAK,MAAQR,EAAK,MAAO,KAAQ,GAAM,EAEjDS,EAAU,KAAK,MAAST,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}